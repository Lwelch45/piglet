#!/bin/bash

echo '
 ____  _         ____  _          _ _
|  _ \(_) __ _  / ___|| |__   ___| | |
| |_) | |/ _` | \___ \|  _ \ / _ \ | |
|  __/| | (_| |  ___) | | | |  __/ | |
|_|   |_|\__, | |____/|_| |_|\___|_|_|
         |___/
'

# TODO: we should find our jar file the same way we do for spark
PIG_LIB=`dirname $0`/../target/scala-2.11/PigCompiler.jar

if [ -z "$PIG_LIB" ]; then
    echo "Please set PIG_LIB to your PigCompiler jar file"
    exit 1
else
    CP=$PIG_LIB
fi

# the directory to include in classpath to enable backends
# this should actually be set by the user using external variables
if [ -z "$BACKEND_DIR" ]; then # if BACKEND_DIR does not exist, use our default one
    BACKEND_DIR=`dirname $0`/../sparklib/target/scala-2.11/*:`dirname $0`/../flinklib/target/scala-2.11/*:`dirname $0`/../mapreduce/target/scala-2.11/*
    echo "No backend direcory (BACKEND_DIR) specified!"
else
    if [[ "$BACKEND_DIR" == */ ]]; then # if it ends with / it's a directory - include all files using the wildcard *
        BACKEND_DIR=$BACKEND_DIR*
    elif [[ "$BACKEND_DIR" != */\* && "$BACKEND_DIR" != *.jar ]]; then  #if it ends not with /* or .jar we assume it's a dir - append /*
        BACKEND_DIR=$BACKEND_DIR/*
    fi
fi

echo "Including backends in $BACKEND_DIR"

CP=$CP:$BACKEND_DIR:$CLASSPATH

BACKEND=""
while getopts ":b:" opt; do
    case $opt in
        b)
            BACKEND=$OPTARG
            shift
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2w
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            exit 1
            ;;
    esac
done

case $BACKEND in
    "spark" | "sparks")
        if [ -z "$SPARK_JAR" ]; then
            echo "Please set SPARK_JAR to your Spark-assembly-hadoop jar file"
            exit 1
        else
            CP=$SPARK_JAR:$CP
        fi
        ;;
    "flink" | "flinks")
        if [ -z "$FLINK_JAR" ]; then
            echo "Please set FLINK_JAR to your Flink jar file (built with scala 2.11)"
            exit 1
        else
            CP=$FLINK_JAR:$CP
        fi
        ;;
    "mapreduce") ;;
    *)
        echo "Unsupported backend $BACKEND. Please specify your backend via the -b option (spark or flink)."
        exit 1
        ;;
esac
java -Dscala.usejavacp=true -classpath $CP dbis.pig.PigREPL $*
